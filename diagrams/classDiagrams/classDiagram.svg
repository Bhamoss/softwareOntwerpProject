<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2515px" preserveAspectRatio="none" style="width:4745px;height:2515px;" version="1.1" viewBox="0 0 4745 2515" width="4745px" zoomAndPan="magnify"><defs><filter height="300%" id="fgdyaexxkhmuq" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="125" x="2312" y="16.708">Class Diagram</text><!--cluster window--><polygon fill="#FFFFFF" filter="url(#fgdyaexxkhmuq)" points="14,36.9531,82,36.9531,89,59.25,1344,59.25,1344,1336.9531,14,1336.9531,14,36.9531" style="stroke: #000000; stroke-width: 2.0;"/><line style="stroke: #000000; stroke-width: 2.0;" x1="14" x2="89" y1="59.25" y2="59.25"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="62" x="18" y="51.9482">window</text><!--cluster tablr--><polygon fill="#FFFFFF" filter="url(#fgdyaexxkhmuq)" points="1352,397.9531,1394,397.9531,1401,420.25,4723,420.25,4723,2503.9531,1352,2503.9531,1352,397.9531" style="stroke: #000000; stroke-width: 2.0;"/><line style="stroke: #000000; stroke-width: 2.0;" x1="1352" x2="1401" y1="420.25" y2="420.25"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="36" x="1356" y="412.9482">tablr</text><!--cluster column--><polygon fill="#FFFFFF" filter="url(#fgdyaexxkhmuq)" points="1360,1484.4531,1423,1484.4531,1430,1506.75,2521,1506.75,2521,2495.9531,1360,2495.9531,1360,1484.4531" style="stroke: #000000; stroke-width: 2.0;"/><line style="stroke: #000000; stroke-width: 2.0;" x1="1360" x2="1430" y1="1506.75" y2="1506.75"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="57" x="1364" y="1499.4482">column</text><!--class Widget--><rect fill="#FEFECE" filter="url(#fgdyaexxkhmuq)" height="112.0234" id="Widget" style="stroke: #A80036; stroke-width: 1.5;" width="237" x="409.5" y="1216.9531"/><ellipse cx="502.25" cy="1232.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M505.2188,1238.5938 Q504.6406,1238.8906 504,1239.0313 Q503.3594,1239.1875 502.6563,1239.1875 Q500.1563,1239.1875 498.8281,1237.5469 Q497.5156,1235.8906 497.5156,1232.7656 Q497.5156,1229.6406 498.8281,1227.9844 Q500.1563,1226.3281 502.6563,1226.3281 Q503.3594,1226.3281 504,1226.4844 Q504.6563,1226.6406 505.2188,1226.9375 L505.2188,1229.6563 Q504.5938,1229.0781 504,1228.8125 Q503.4063,1228.5313 502.7813,1228.5313 Q501.4375,1228.5313 500.75,1229.6094 Q500.0625,1230.6719 500.0625,1232.7656 Q500.0625,1234.8594 500.75,1235.9375 Q501.4375,1237 502.7813,1237 Q503.4063,1237 504,1236.7344 Q504.5938,1236.4531 505.2188,1235.875 L505.2188,1238.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="522.75" y="1237.1074">Widget</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="410.5" x2="645.5" y1="1248.9531" y2="1248.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="410.5" x2="645.5" y1="1256.9531" y2="1256.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="415.5" y="1271.1636">paint(Graphics)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="415.5" y="1283.9683">handleKeyEvent(int, int, char): boolean</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="415.5" y="1296.7729">handleMouseEvent(int, int ,int): boolean</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="415.5" y="1309.5776">isBlocking(): boolean</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="415.5" y="1322.3823">containsPoint(int, int): boolean</text><!--class UIWindowHandler--><rect fill="#FEFECE" filter="url(#fgdyaexxkhmuq)" height="69.6094" id="UIWindowHandler" style="stroke: #A80036; stroke-width: 1.5;" width="140" x="751" y="63.9531"/><ellipse cx="766" cy="79.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M768.9688,85.5938 Q768.3906,85.8906 767.75,86.0313 Q767.1094,86.1875 766.4063,86.1875 Q763.9063,86.1875 762.5781,84.5469 Q761.2656,82.8906 761.2656,79.7656 Q761.2656,76.6406 762.5781,74.9844 Q763.9063,73.3281 766.4063,73.3281 Q767.1094,73.3281 767.75,73.4844 Q768.4063,73.6406 768.9688,73.9375 L768.9688,76.6563 Q768.3438,76.0781 767.75,75.8125 Q767.1563,75.5313 766.5313,75.5313 Q765.1875,75.5313 764.5,76.6094 Q763.8125,77.6719 763.8125,79.7656 Q763.8125,81.8594 764.5,82.9375 Q765.1875,84 766.5313,84 Q767.1563,84 767.75,83.7344 Q768.3438,83.4531 768.9688,82.875 L768.9688,85.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="108" x="780" y="84.1074">UIWindowHandler</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="752" x2="890" y1="95.9531" y2="95.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="757" y="126.9683">managing windows</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="752" x2="776.5" y1="110.3555" y2="110.3555"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="776.5" y="113.6636">Responsibilities</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="865.5" x2="890" y1="110.3555" y2="110.3555"/><!--class LabelWidget--><rect fill="#FEFECE" filter="url(#fgdyaexxkhmuq)" height="48" id="LabelWidget" style="stroke: #A80036; stroke-width: 1.5;" width="108" x="179" y="283.9531"/><ellipse cx="194" cy="299.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M196.9688,305.5938 Q196.3906,305.8906 195.75,306.0313 Q195.1094,306.1875 194.4063,306.1875 Q191.9063,306.1875 190.5781,304.5469 Q189.2656,302.8906 189.2656,299.7656 Q189.2656,296.6406 190.5781,294.9844 Q191.9063,293.3281 194.4063,293.3281 Q195.1094,293.3281 195.75,293.4844 Q196.4063,293.6406 196.9688,293.9375 L196.9688,296.6563 Q196.3438,296.0781 195.75,295.8125 Q195.1563,295.5313 194.5313,295.5313 Q193.1875,295.5313 192.5,296.6094 Q191.8125,297.6719 191.8125,299.7656 Q191.8125,301.8594 192.5,302.9375 Q193.1875,304 194.5313,304 Q195.1563,304 195.75,303.7344 Q196.3438,303.4531 196.9688,302.875 L196.9688,305.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="76" x="208" y="304.1074">LabelWidget</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="180" x2="286" y1="315.9531" y2="315.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="180" x2="286" y1="323.9531" y2="323.9531"/><!--class EditorWidget--><rect fill="#FEFECE" filter="url(#fgdyaexxkhmuq)" height="48" id="EditorWidget" style="stroke: #A80036; stroke-width: 1.5;" width="112" x="347" y="74.9531"/><ellipse cx="362" cy="90.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M364.9688,96.5938 Q364.3906,96.8906 363.75,97.0313 Q363.1094,97.1875 362.4063,97.1875 Q359.9063,97.1875 358.5781,95.5469 Q357.2656,93.8906 357.2656,90.7656 Q357.2656,87.6406 358.5781,85.9844 Q359.9063,84.3281 362.4063,84.3281 Q363.1094,84.3281 363.75,84.4844 Q364.4063,84.6406 364.9688,84.9375 L364.9688,87.6563 Q364.3438,87.0781 363.75,86.8125 Q363.1563,86.5313 362.5313,86.5313 Q361.1875,86.5313 360.5,87.6094 Q359.8125,88.6719 359.8125,90.7656 Q359.8125,92.8594 360.5,93.9375 Q361.1875,95 362.5313,95 Q363.1563,95 363.75,94.7344 Q364.3438,94.4531 364.9688,93.875 L364.9688,96.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="80" x="376" y="95.1074">EditorWidget</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="348" x2="458" y1="106.9531" y2="106.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="348" x2="458" y1="114.9531" y2="114.9531"/><!--class CheckBoxWidget--><rect fill="#FEFECE" filter="url(#fgdyaexxkhmuq)" height="48" id="CheckBoxWidget" style="stroke: #A80036; stroke-width: 1.5;" width="135" x="322.5" y="283.9531"/><ellipse cx="337.5" cy="299.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M340.4688,305.5938 Q339.8906,305.8906 339.25,306.0313 Q338.6094,306.1875 337.9063,306.1875 Q335.4063,306.1875 334.0781,304.5469 Q332.7656,302.8906 332.7656,299.7656 Q332.7656,296.6406 334.0781,294.9844 Q335.4063,293.3281 337.9063,293.3281 Q338.6094,293.3281 339.25,293.4844 Q339.9063,293.6406 340.4688,293.9375 L340.4688,296.6563 Q339.8438,296.0781 339.25,295.8125 Q338.6563,295.5313 338.0313,295.5313 Q336.6875,295.5313 336,296.6094 Q335.3125,297.6719 335.3125,299.7656 Q335.3125,301.8594 336,302.9375 Q336.6875,304 338.0313,304 Q338.6563,304 339.25,303.7344 Q339.8438,303.4531 340.4688,302.875 L340.4688,305.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="103" x="351.5" y="304.1074">CheckBoxWidget</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="323.5" x2="456.5" y1="315.9531" y2="315.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="323.5" x2="456.5" y1="323.9531" y2="323.9531"/><!--class ButtonWidget--><rect fill="#FEFECE" filter="url(#fgdyaexxkhmuq)" height="48" id="ButtonWidget" style="stroke: #A80036; stroke-width: 1.5;" width="117" x="194.5" y="74.9531"/><ellipse cx="209.5" cy="90.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M212.4688,96.5938 Q211.8906,96.8906 211.25,97.0313 Q210.6094,97.1875 209.9063,97.1875 Q207.4063,97.1875 206.0781,95.5469 Q204.7656,93.8906 204.7656,90.7656 Q204.7656,87.6406 206.0781,85.9844 Q207.4063,84.3281 209.9063,84.3281 Q210.6094,84.3281 211.25,84.4844 Q211.9063,84.6406 212.4688,84.9375 L212.4688,87.6563 Q211.8438,87.0781 211.25,86.8125 Q210.6563,86.5313 210.0313,86.5313 Q208.6875,86.5313 208,87.6094 Q207.3125,88.6719 207.3125,90.7656 Q207.3125,92.8594 208,93.9375 Q208.6875,95 210.0313,95 Q210.6563,95 211.25,94.7344 Q211.8438,94.4531 212.4688,93.875 L212.4688,96.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="85" x="223.5" y="95.1074">ButtonWidget</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="195.5" x2="310.5" y1="106.9531" y2="106.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="195.5" x2="310.5" y1="114.9531" y2="114.9531"/><!--class SwitchBoxWidget--><rect fill="#FEFECE" filter="url(#fgdyaexxkhmuq)" height="48" id="SwitchBoxWidget" style="stroke: #A80036; stroke-width: 1.5;" width="137" x="22.5" y="74.9531"/><ellipse cx="37.5" cy="90.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M40.4688,96.5938 Q39.8906,96.8906 39.25,97.0313 Q38.6094,97.1875 37.9063,97.1875 Q35.4063,97.1875 34.0781,95.5469 Q32.7656,93.8906 32.7656,90.7656 Q32.7656,87.6406 34.0781,85.9844 Q35.4063,84.3281 37.9063,84.3281 Q38.6094,84.3281 39.25,84.4844 Q39.9063,84.6406 40.4688,84.9375 L40.4688,87.6563 Q39.8438,87.0781 39.25,86.8125 Q38.6563,86.5313 38.0313,86.5313 Q36.6875,86.5313 36,87.6094 Q35.3125,88.6719 35.3125,90.7656 Q35.3125,92.8594 36,93.9375 Q36.6875,95 38.0313,95 Q38.6563,95 39.25,94.7344 Q39.8438,94.4531 40.4688,93.875 L40.4688,96.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="105" x="51.5" y="95.1074">SwitchBoxWidget</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="23.5" x2="158.5" y1="106.9531" y2="106.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="23.5" x2="158.5" y1="114.9531" y2="114.9531"/><!--class ColumnWidget--><rect fill="#FEFECE" filter="url(#fgdyaexxkhmuq)" height="48" id="ColumnWidget" style="stroke: #A80036; stroke-width: 1.5;" width="121" x="22.5" y="283.9531"/><ellipse cx="37.5" cy="299.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M40.4688,305.5938 Q39.8906,305.8906 39.25,306.0313 Q38.6094,306.1875 37.9063,306.1875 Q35.4063,306.1875 34.0781,304.5469 Q32.7656,302.8906 32.7656,299.7656 Q32.7656,296.6406 34.0781,294.9844 Q35.4063,293.3281 37.9063,293.3281 Q38.6094,293.3281 39.25,293.4844 Q39.9063,293.6406 40.4688,293.9375 L40.4688,296.6563 Q39.8438,296.0781 39.25,295.8125 Q38.6563,295.5313 38.0313,295.5313 Q36.6875,295.5313 36,296.6094 Q35.3125,297.6719 35.3125,299.7656 Q35.3125,301.8594 36,302.9375 Q36.6875,304 38.0313,304 Q38.6563,304 39.25,303.7344 Q39.8438,303.4531 40.4688,302.875 L40.4688,305.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="89" x="51.5" y="304.1074">ColumnWidget</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="23.5" x2="142.5" y1="315.9531" y2="315.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="23.5" x2="142.5" y1="323.9531" y2="323.9531"/><!--class TablesWindow--><rect fill="#FEFECE" filter="url(#fgdyaexxkhmuq)" height="69.6094" id="TablesWindow" style="stroke: #A80036; stroke-width: 1.5;" width="206" x="588" y="272.9531"/><ellipse cx="642.75" cy="288.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M645.7188,294.5938 Q645.1406,294.8906 644.5,295.0313 Q643.8594,295.1875 643.1563,295.1875 Q640.6563,295.1875 639.3281,293.5469 Q638.0156,291.8906 638.0156,288.7656 Q638.0156,285.6406 639.3281,283.9844 Q640.6563,282.3281 643.1563,282.3281 Q643.8594,282.3281 644.5,282.4844 Q645.1563,282.6406 645.7188,282.9375 L645.7188,285.6563 Q645.0938,285.0781 644.5,284.8125 Q643.9063,284.5313 643.2813,284.5313 Q641.9375,284.5313 641.25,285.6094 Q640.5625,286.6719 640.5625,288.7656 Q640.5625,290.8594 641.25,291.9375 Q641.9375,293 643.2813,293 Q643.9063,293 644.5,292.7344 Q645.0938,292.4531 645.7188,291.875 L645.7188,294.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="88" x="663.25" y="293.1074">TablesWindow</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="589" x2="793" y1="304.9531" y2="304.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="594" y="335.9683">generating tables window widgets</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="589" x2="646.5" y1="319.3555" y2="319.3555"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="646.5" y="322.6636">Responsibilities</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="735.5" x2="793" y1="319.3555" y2="319.3555"/><!--class TableDesignWindow--><rect fill="#FEFECE" filter="url(#fgdyaexxkhmuq)" height="69.6094" id="TableDesignWindow" style="stroke: #A80036; stroke-width: 1.5;" width="241" x="829.5" y="272.9531"/><ellipse cx="883.75" cy="288.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M886.7188,294.5938 Q886.1406,294.8906 885.5,295.0313 Q884.8594,295.1875 884.1563,295.1875 Q881.6563,295.1875 880.3281,293.5469 Q879.0156,291.8906 879.0156,288.7656 Q879.0156,285.6406 880.3281,283.9844 Q881.6563,282.3281 884.1563,282.3281 Q884.8594,282.3281 885.5,282.4844 Q886.1563,282.6406 886.7188,282.9375 L886.7188,285.6563 Q886.0938,285.0781 885.5,284.8125 Q884.9063,284.5313 884.2813,284.5313 Q882.9375,284.5313 882.25,285.6094 Q881.5625,286.6719 881.5625,288.7656 Q881.5625,290.8594 882.25,291.9375 Q882.9375,293 884.2813,293 Q884.9063,293 885.5,292.7344 Q886.0938,292.4531 886.7188,291.875 L886.7188,294.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="124" x="904.25" y="293.1074">TableDesignWindow</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="830.5" x2="1069.5" y1="304.9531" y2="304.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="835.5" y="335.9683">generating table design window widgets</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="830.5" x2="905.5" y1="319.3555" y2="319.3555"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="905.5" y="322.6636">Responsibilities</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="994.5" x2="1069.5" y1="319.3555" y2="319.3555"/><!--class TableRowsWindow--><rect fill="#FEFECE" filter="url(#fgdyaexxkhmuq)" height="69.6094" id="TableRowsWindow" style="stroke: #A80036; stroke-width: 1.5;" width="231" x="1105.5" y="272.9531"/><ellipse cx="1160.25" cy="288.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1163.2188,294.5938 Q1162.6406,294.8906 1162,295.0313 Q1161.3594,295.1875 1160.6563,295.1875 Q1158.1563,295.1875 1156.8281,293.5469 Q1155.5156,291.8906 1155.5156,288.7656 Q1155.5156,285.6406 1156.8281,283.9844 Q1158.1563,282.3281 1160.6563,282.3281 Q1161.3594,282.3281 1162,282.4844 Q1162.6563,282.6406 1163.2188,282.9375 L1163.2188,285.6563 Q1162.5938,285.0781 1162,284.8125 Q1161.4063,284.5313 1160.7813,284.5313 Q1159.4375,284.5313 1158.75,285.6094 Q1158.0625,286.6719 1158.0625,288.7656 Q1158.0625,290.8594 1158.75,291.9375 Q1159.4375,293 1160.7813,293 Q1161.4063,293 1162,292.7344 Q1162.5938,292.4531 1163.2188,291.875 L1163.2188,294.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="113" x="1180.75" y="293.1074">TableRowsWindow</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1106.5" x2="1335.5" y1="304.9531" y2="304.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="1111.5" y="335.9683">generating table rows window widgets</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1106.5" x2="1176.5" y1="319.3555" y2="319.3555"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="1176.5" y="322.6636">Responsibilities</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1265.5" x2="1335.5" y1="319.3555" y2="319.3555"/><!--class TableHandler--><rect fill="#FEFECE" filter="url(#fgdyaexxkhmuq)" height="320.8984" id="TableHandler" style="stroke: #A80036; stroke-width: 1.5;" width="712" x="2021" y="629.9531"/><ellipse cx="2331.25" cy="645.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2334.2188,651.5938 Q2333.6406,651.8906 2333,652.0313 Q2332.3594,652.1875 2331.6563,652.1875 Q2329.1563,652.1875 2327.8281,650.5469 Q2326.5156,648.8906 2326.5156,645.7656 Q2326.5156,642.6406 2327.8281,640.9844 Q2329.1563,639.3281 2331.6563,639.3281 Q2332.3594,639.3281 2333,639.4844 Q2333.6563,639.6406 2334.2188,639.9375 L2334.2188,642.6563 Q2333.5938,642.0781 2333,641.8125 Q2332.4063,641.5313 2331.7813,641.5313 Q2330.4375,641.5313 2329.75,642.6094 Q2329.0625,643.6719 2329.0625,645.7656 Q2329.0625,647.8594 2329.75,648.9375 Q2330.4375,650 2331.7813,650 Q2332.4063,650 2333,649.7344 Q2333.5938,649.4531 2334.2188,648.875 L2334.2188,651.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="83" x="2351.75" y="650.1074">TableHandler</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2022" x2="2732" y1="661.9531" y2="661.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="2027" y="676.1636">tableManager : TableManager {readOnly}</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2027" y="688.9683">terminated : boolean</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="2027" y="718.5776">getNbTables() : int</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="2027" y="731.3823">hasAsTable(name : String) : boolean</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="2027" y="744.187">getTableNames() : ArrayList&lt;String&gt;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="598" x="2027" y="756.9917">canHaveAsName(tableName : String, newTableName: String) : boolean {exception IllegalTableException}</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="2027" y="769.7964">getOpenTable() : String</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="2027" y="782.6011">isTerminated() : boolean</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="2027" y="795.4058">createTableDesignHandler() : TableDesignHandler</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="2027" y="808.2104">createTableRowsHandler() : TableRowsHandler</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2022" x2="2350.5" y1="701.9648" y2="701.9648"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="2350.5" y="705.2729">Inspector</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2403.5" x2="2732" y1="701.9648" y2="701.9648"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="2041" y="837.8198">«constructor» TableHandler()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="686" x="2041" y="850.6245">setTableName(tableName : String, newName : String) : void {exception IllegalTableException, IllegalArgumentException}</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="2041" y="863.4292">addTable() : void</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="414" x="2041" y="876.2339">removeTable(tableName : String): void {exception IllegalTableException}</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="403" x="2041" y="889.0386">openTable(tableName : String): void  {exception IllegalTableException}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2029" y="896.5352"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="2041" y="901.8433">getTableManager() : TableManager</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2029" y="909.3398"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="2041" y="914.6479">canHaveAsTableManager(tableManager : TableManager) : boolean</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2022" x2="2355.5" y1="821.207" y2="821.207"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="2355.5" y="824.5151">Mutator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2398.5" x2="2732" y1="821.207" y2="821.207"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="2027" y="944.2573">providing a controller for table mode</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2022" x2="2332.5" y1="927.6445" y2="927.6445"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="2332.5" y="930.9526">Responsibilities</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2421.5" x2="2732" y1="927.6445" y2="927.6445"/><!--class TableDesignHandler--><rect fill="#FEFECE" filter="url(#fgdyaexxkhmuq)" height="359.3125" id="TableDesignHandler" style="stroke: #A80036; stroke-width: 1.5;" width="904" x="2768" y="610.9531"/><ellipse cx="3152.75" cy="626.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3155.7188,632.5938 Q3155.1406,632.8906 3154.5,633.0313 Q3153.8594,633.1875 3153.1563,633.1875 Q3150.6563,633.1875 3149.3281,631.5469 Q3148.0156,629.8906 3148.0156,626.7656 Q3148.0156,623.6406 3149.3281,621.9844 Q3150.6563,620.3281 3153.1563,620.3281 Q3153.8594,620.3281 3154.5,620.4844 Q3155.1563,620.6406 3155.7188,620.9375 L3155.7188,623.6563 Q3155.0938,623.0781 3154.5,622.8125 Q3153.9063,622.5313 3153.2813,622.5313 Q3151.9375,622.5313 3151.25,623.6094 Q3150.5625,624.6719 3150.5625,626.7656 Q3150.5625,628.8594 3151.25,629.9375 Q3151.9375,631 3153.2813,631 Q3153.9063,631 3154.5,630.7344 Q3155.0938,630.4531 3155.7188,629.875 L3155.7188,632.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="126" x="3173.25" y="631.1074">TableDesignHandler</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2769" x2="3671" y1="642.9531" y2="642.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="2774" y="657.1636">tableManager : TableManager {readOnly}</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2774" y="669.9683">terminated : boolean</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="2788" y="699.5776">getOpenTable() : String</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="417" x="2788" y="712.3823">getColumnNames() : ArrayList&lt;String&gt; {exception IllegalTableException}</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="594" x="2788" y="725.187">getColumnType(columnName : String) : String {exception IllegalColumnException, IllegalTableException}</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="638" x="2788" y="737.9917">getColumnAllowBlank(columnName : String) : boolean {exception IllegalColumnException, IllegalTableException}</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="638" x="2788" y="750.7964">getColumnDefaultValue(columnName : String) : String {exception IllegalColumnException, IllegalTableException}</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="765" x="2788" y="763.6011">canHaveAsColumnName(columnName : String, newName : String) : boolean {exception IllegalColumnException, IllegalTableException}</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="727" x="2788" y="776.4058">canHaveAsColumnType(columnName : String, type : String) : boolean {exception IllegalColumnException, IllegalTableException}</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="791" x="2788" y="789.2104">canHaveAsColumnAllowBlanks(columnName : String, blanks : boolean) : boolean {exception IllegalColumnException, IllegalTableException}</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="798" x="2788" y="802.0151">canHaveAsDefaultValue(columnName : String, newDefaultValue : String) : boolean {exception IllegalColumnException, IllegalTableException}</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="2788" y="814.8198">isTerminated() : boolean</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2776" y="822.3164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="2788" y="827.6245">canHaveAsTableManager(tableManager : TableManager) : boolean</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2769" x2="3193.5" y1="682.9648" y2="682.9648"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="3193.5" y="686.2729">Inspector</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3246.5" x2="3671" y1="682.9648" y2="682.9648"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="666" x="2774" y="857.2339">«constructor» TableDesignHandler(mng : TableManager) : TableDesignHandler {exception IllegalArgumentException}</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="892" x="2774" y="870.0386">setColumnName(columnName : String, newColumnName : String) : void {exception IllegalColumnException, IllegalArgumentException, IllegalTableException}</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="804" x="2774" y="882.8433">setColumnType(columName : String, type : String) : void {exception IllegalColumnException, IllegalArgumentException, IllegalTableException}</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="875" x="2774" y="895.6479">setColumnAllowBlanks(columnName : String, blanks : boolean) : void {exception IllegalColumnException, IllegalArgumentException, IllegalTableException}</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="867" x="2774" y="908.4526">setColumnDefaultValue(columnName : String, newDefaultValue : String) : void {IllegalColumnException, IllegalArgumentException, IllegalTableException}</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="301" x="2774" y="921.2573">addColumn() : void {exception IllegalTableException}</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="593" x="2774" y="934.062">removeColumn(columnName : String) : void {exception IllegalArgumentException, IllegalTableException}</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2769" x2="3198.5" y1="840.6211" y2="840.6211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="3198.5" y="843.9292">Mutator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3241.5" x2="3671" y1="840.6211" y2="840.6211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="2774" y="963.6714">managing access to columns</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2769" x2="3175.5" y1="947.0586" y2="947.0586"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="3175.5" y="950.3667">Responsibilities</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3264.5" x2="3671" y1="947.0586" y2="947.0586"/><!--class TableRowsHandler--><rect fill="#FEFECE" filter="url(#fgdyaexxkhmuq)" height="256.875" id="TableRowsHandler" style="stroke: #A80036; stroke-width: 1.5;" width="1008" x="3707" y="661.9531"/><ellipse cx="4149.25" cy="677.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4152.2188,683.5938 Q4151.6406,683.8906 4151,684.0313 Q4150.3594,684.1875 4149.6563,684.1875 Q4147.1563,684.1875 4145.8281,682.5469 Q4144.5156,680.8906 4144.5156,677.7656 Q4144.5156,674.6406 4145.8281,672.9844 Q4147.1563,671.3281 4149.6563,671.3281 Q4150.3594,671.3281 4151,671.4844 Q4151.6563,671.6406 4152.2188,671.9375 L4152.2188,674.6563 Q4151.5938,674.0781 4151,673.8125 Q4150.4063,673.5313 4149.7813,673.5313 Q4148.4375,673.5313 4147.75,674.6094 Q4147.0625,675.6719 4147.0625,677.7656 Q4147.0625,679.8594 4147.75,680.9375 Q4148.4375,682 4149.7813,682 Q4150.4063,682 4151,681.7344 Q4151.5938,681.4531 4152.2188,680.875 L4152.2188,683.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="115" x="4169.75" y="682.1074">TableRowsHandler</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3708" x2="4714" y1="693.9531" y2="693.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="3713" y="708.1636">tableManager : TableManager {readOnly}</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="3713" y="720.9683">terminated : boolean</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="3727" y="750.5776">getOpenTable() : String</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="417" x="3727" y="763.3823">getColumnNames() : ArrayList&lt;String&gt; {exception IllegalTableException}</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="594" x="3727" y="776.187">getColumnType(columnName : String) : String {exception IllegalColumnException, IllegalTableException}</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="888" x="3727" y="788.9917">canHaveAsCellValue(columnName : String, row : int, value : String) : boolean {exception IllegalColumnException, IllegalRowException, IllegalTableException}</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="751" x="3727" y="801.7964">getCellValue(columnName : String, Row : int) : String {exception IllegalColumnException, IllegalRowException, IllegalTableException}</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="3727" y="814.6011">isTerminated() : boolean</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3715" y="822.0977"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="3727" y="827.4058">canHaveAsTableManager(tableManager : TableManager) : boolean</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3708" x2="4184.5" y1="733.9648" y2="733.9648"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="4184.5" y="737.2729">Inspector</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4237.5" x2="4714" y1="733.9648" y2="733.9648"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="996" x="3713" y="857.0151">setCellValue(columnName : String, row : int, newValue : String) : void {exception IllegalColumnException, IllegalRowException, IllegalArgumentException, IllegalTableException}</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="3713" y="869.8198">addRow() : void {exception IllegalTableException}</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="468" x="3713" y="882.6245">removeRow(row : int) : void {exception IllegalRowException, IllegalTableException}</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3708" x2="4189.5" y1="840.4023" y2="840.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="4189.5" y="843.7104">Mutator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4232.5" x2="4714" y1="840.4023" y2="840.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="3713" y="912.2339">managing access to rows</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3708" x2="4166.5" y1="895.6211" y2="895.6211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="4166.5" y="898.9292">Responsibilities</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4255.5" x2="4714" y1="895.6211" y2="895.6211"/><!--class TableManager--><rect fill="#FEFECE" filter="url(#fgdyaexxkhmuq)" height="743.4531" id="TableManager" style="stroke: #A80036; stroke-width: 1.5;" width="1022" x="2619" y="1389.9531"/><ellipse cx="3081.25" cy="1405.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3084.2188,1411.5938 Q3083.6406,1411.8906 3083,1412.0313 Q3082.3594,1412.1875 3081.6563,1412.1875 Q3079.1563,1412.1875 3077.8281,1410.5469 Q3076.5156,1408.8906 3076.5156,1405.7656 Q3076.5156,1402.6406 3077.8281,1400.9844 Q3079.1563,1399.3281 3081.6563,1399.3281 Q3082.3594,1399.3281 3083,1399.4844 Q3083.6563,1399.6406 3084.2188,1399.9375 L3084.2188,1402.6563 Q3083.5938,1402.0781 3083,1401.8125 Q3082.4063,1401.5313 3081.7813,1401.5313 Q3080.4375,1401.5313 3079.75,1402.6094 Q3079.0625,1403.6719 3079.0625,1405.7656 Q3079.0625,1407.8594 3079.75,1408.9375 Q3080.4375,1410 3081.7813,1410 Q3082.4063,1410 3083,1409.7344 Q3083.5938,1409.4531 3084.2188,1408.875 L3084.2188,1411.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="89" x="3101.75" y="1410.1074">TableManager</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2620" x2="3640" y1="1421.9531" y2="1421.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="2625" y="1436.1636">tables : List&lt;Table&gt; [*] = new LinkedList&lt;Table&gt;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2625" y="1448.9683">currentTable : Table [0...1] = null</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="2625" y="1461.7729">terminated : boolean = false</text><polygon fill="#4177AF" points="2630,1485.0742,2626,1491.0742,2634,1491.0742" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="2639" y="1491.3823">hasAsTable(name : String) : boolean</text><polygon fill="#4177AF" points="2630,1497.8789,2626,1503.8789,2634,1503.8789" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="2639" y="1504.187">getTableNames() : ArrayList&lt;String&gt;</text><polygon fill="#4177AF" points="2630,1510.6836,2626,1516.6836,2634,1516.6836" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="598" x="2639" y="1516.9917">canHaveAsName(tableName : String, newTableName: String) : boolean {exception IllegalTableException}</text><polygon fill="#4177AF" points="2630,1523.4883,2626,1529.4883,2634,1529.4883" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="2639" y="1529.7964">getOpenTable() : String</text><polygon fill="#4177AF" points="2630,1536.293,2626,1542.293,2634,1542.293" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="417" x="2639" y="1542.6011">getColumnNames() : ArrayList&lt;String&gt; {exception IllegalTableException}</text><polygon fill="#4177AF" points="2630,1549.0977,2626,1555.0977,2634,1555.0977" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="594" x="2639" y="1555.4058">getColumnType(columnName : String) : String {exception IllegalColumnException, IllegalTableException}</text><polygon fill="#4177AF" points="2630,1561.9023,2626,1567.9023,2634,1567.9023" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="638" x="2639" y="1568.2104">getColumnAllowBlank(columnName : String) : boolean {exception IllegalColumnException, IllegalTableException}</text><polygon fill="#4177AF" points="2630,1574.707,2626,1580.707,2634,1580.707" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="638" x="2639" y="1581.0151">getColumnDefaultValue(columnName : String) : String {exception IllegalColumnException, IllegalTableException}</text><polygon fill="#4177AF" points="2630,1587.5117,2626,1593.5117,2634,1593.5117" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="765" x="2639" y="1593.8198">canHaveAsColumnName(columnName : String, newName : String) : boolean {exception IllegalColumnException, IllegalTableException}</text><polygon fill="#4177AF" points="2630,1600.3164,2626,1606.3164,2634,1606.3164" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="727" x="2639" y="1606.6245">canHaveAsColumnType(columnName : String, type : String) : boolean {exception IllegalColumnException, IllegalTableException}</text><polygon fill="#4177AF" points="2630,1613.1211,2626,1619.1211,2634,1619.1211" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="791" x="2639" y="1619.4292">canHaveAsColumnAllowBlanks(columnName : String, blanks : boolean) : boolean {exception IllegalColumnException, IllegalTableException}</text><polygon fill="#4177AF" points="2630,1625.9258,2626,1631.9258,2634,1631.9258" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="798" x="2639" y="1632.2339">canHaveAsDefaultValue(columnName : String, newDefaultValue : String) : boolean {exception IllegalColumnException, IllegalTableException}</text><polygon fill="#4177AF" points="2630,1638.7305,2626,1644.7305,2634,1644.7305" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="751" x="2639" y="1645.0386">getCellValue(columnName : String, Row : int) : String {exception IllegalColumnException, IllegalRowException, IllegalTableException}</text><polygon fill="#4177AF" points="2630,1651.5352,2626,1657.5352,2634,1657.5352" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="888" x="2639" y="1657.8433">canHaveAsCellValue(columnName : String, row : int, value : String) : boolean {exception IllegalColumnException, IllegalRowException, IllegalTableException}</text><polygon fill="#4177AF" points="2630,1664.3398,2626,1670.3398,2634,1670.3398" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="2639" y="1670.6479">canTerminate() : boolean</text><polygon fill="#4177AF" points="2630,1677.1445,2626,1683.1445,2634,1683.1445" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="2639" y="1683.4526">isTerminated() : boolean</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2627" y="1690.9492"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="2639" y="1696.2573">getNbTables() : int</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2627" y="1703.7539"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="2639" y="1709.062">hasAsTable(table : Table) : boolean</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2627" y="1716.5586"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="385" x="2639" y="1721.8667">getTableAt(index : int) : Table {exception IllegalArgumentException}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2627" y="1729.3633"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="2639" y="1734.6714">getTable(name : String) : Table {exception IllegalTableException}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2627" y="1742.168"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="2639" y="1747.4761">canHaveAsTable(table : Table) : boolean</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2627" y="1754.9727"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="2639" y="1760.2808">canHaveAsTableAt(index : int,table : Table) : boolean</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2627" y="1767.7773"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="402" x="2639" y="1773.0854">getTableIndex(table : Table) : int {exception IllegalArgumentException}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2627" y="1780.582"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2639" y="1785.8901">hasProperTables() : boolean</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2627" y="1793.3867"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="2639" y="1798.6948">getCurrentTable() : Table</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2627" y="1806.1914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="2639" y="1811.4995">canHaveAsCurrentTable(table : Table) : boolean</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2620" x2="3100" y1="1474.7695" y2="1474.7695"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="3100" y="1478.0776">Inspectors</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3160" x2="3640" y1="1474.7695" y2="1474.7695"/><polygon fill="#4177AF" points="2630,1834.8008,2626,1840.8008,2634,1840.8008" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="2639" y="1841.1089">«constructor» TableManager()</text><polygon fill="#4177AF" points="2630,1847.6055,2626,1853.6055,2634,1853.6055" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="686" x="2639" y="1853.9136">setTableName(tableName : String, newName : String) : void {exception IllegalTableException, IllegalArgumentException}</text><polygon fill="#4177AF" points="2630,1860.4102,2626,1866.4102,2634,1866.4102" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="2639" y="1866.7183">addTable() : void</text><polygon fill="#4177AF" points="2630,1873.2148,2626,1879.2148,2634,1879.2148" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="414" x="2639" y="1879.5229">removeTable(tableName : String): void {exception IllegalTableException}</text><polygon fill="#4177AF" points="2630,1886.0195,2626,1892.0195,2634,1892.0195" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="403" x="2639" y="1892.3276">openTable(tableName : String): void  {exception IllegalTableException}</text><polygon fill="#4177AF" points="2630,1898.8242,2626,1904.8242,2634,1904.8242" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="892" x="2639" y="1905.1323">setColumnName(columnName : String, newColumnName : String) : void {exception IllegalColumnException, IllegalArgumentException, IllegalTableException}</text><polygon fill="#4177AF" points="2630,1911.6289,2626,1917.6289,2634,1917.6289" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="804" x="2639" y="1917.937">setColumnType(columName : String, type : String) : void {exception IllegalColumnException, IllegalArgumentException, IllegalTableException}</text><polygon fill="#4177AF" points="2630,1924.4336,2626,1930.4336,2634,1930.4336" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="875" x="2639" y="1930.7417">setColumnAllowBlanks(columnName : String, blanks : boolean) : void {exception IllegalColumnException, IllegalArgumentException, IllegalTableException}</text><polygon fill="#4177AF" points="2630,1937.2383,2626,1943.2383,2634,1943.2383" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="867" x="2639" y="1943.5464">setColumnDefaultValue(columnName : String, newDefaultValue : String) : void {IllegalColumnException, IllegalArgumentException, IllegalTableException}</text><polygon fill="#4177AF" points="2630,1950.043,2626,1956.043,2634,1956.043" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="301" x="2639" y="1956.3511">addColumn() : void {exception IllegalTableException}</text><polygon fill="#4177AF" points="2630,1962.8477,2626,1968.8477,2634,1968.8477" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="593" x="2639" y="1969.1558">removeColumn(columnName : String) : void {exception IllegalArgumentException, IllegalTableException}</text><polygon fill="#4177AF" points="2630,1975.6523,2626,1981.6523,2634,1981.6523" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="996" x="2639" y="1981.9604">setCellValue(columnName : String, row : int, newValue : String) : void {exception IllegalColumnException, IllegalRowException, IllegalArgumentException, IllegalTableException}</text><polygon fill="#4177AF" points="2630,1988.457,2626,1994.457,2634,1994.457" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="2639" y="1994.7651">addRow() : void {exception IllegalTableException}</text><polygon fill="#4177AF" points="2630,2001.2617,2626,2007.2617,2634,2007.2617" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="468" x="2639" y="2007.5698">removeRow(row : int) : void {exception IllegalRowException, IllegalTableException}</text><polygon fill="#4177AF" points="2630,2014.0664,2626,2020.0664,2634,2020.0664" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="2639" y="2020.3745">terminate() : void {exception IllegalStateException}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2627" y="2027.8711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="459" x="2639" y="2033.1792">addTableAt(index : int, table : Table) : void {exception IllegalArgumentException}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2627" y="2040.6758"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="402" x="2639" y="2045.9839">removeTableAt(index : int) : void {exception IllegalArgumentException}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2627" y="2053.4805"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="406" x="2639" y="2058.7886">removeTable(table : Table) : void {exception IllegalArgumentException}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2627" y="2066.2852"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="405" x="2639" y="2071.5933">appendTable(table : Table) : void {exception IllegalArgumentException}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2627" y="2079.0898"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="436" x="2639" y="2084.3979">insertAtFrontTable(table : Table) : void {exception IllegalArgumentException}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2627" y="2091.8945"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="400" x="2639" y="2097.2026">setCurrentTable(table : Table) : void {exception IllegalTableException}</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2620" x2="3105" y1="1824.4961" y2="1824.4961"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="50" x="3105" y="1827.8042">Mutators</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3155" x2="3640" y1="1824.4961" y2="1824.4961"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="2625" y="2126.812">manage tables and manage access to tables</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2620" x2="3091" y1="2110.1992" y2="2110.1992"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="3091" y="2113.5073">Responsibility</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3169" x2="3640" y1="2110.1992" y2="2110.1992"/><!--class Table--><rect fill="#FEFECE" filter="url(#fgdyaexxkhmuq)" height="730.6484" id="Table" style="stroke: #A80036; stroke-width: 1.5;" width="627" x="1359.5" y="424.9531"/><ellipse cx="1651.75" cy="440.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1654.7188,446.5938 Q1654.1406,446.8906 1653.5,447.0313 Q1652.8594,447.1875 1652.1563,447.1875 Q1649.6563,447.1875 1648.3281,445.5469 Q1647.0156,443.8906 1647.0156,440.7656 Q1647.0156,437.6406 1648.3281,435.9844 Q1649.6563,434.3281 1652.1563,434.3281 Q1652.8594,434.3281 1653.5,434.4844 Q1654.1563,434.6406 1654.7188,434.9375 L1654.7188,437.6563 Q1654.0938,437.0781 1653.5,436.8125 Q1652.9063,436.5313 1652.2813,436.5313 Q1650.9375,436.5313 1650.25,437.6094 Q1649.5625,438.6719 1649.5625,440.7656 Q1649.5625,442.8594 1650.25,443.9375 Q1650.9375,445 1652.2813,445 Q1652.9063,445 1653.5,444.7344 Q1654.0938,444.4531 1654.7188,443.875 L1654.7188,446.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="34" x="1672.25" y="445.1074">Table</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1360.5" x2="1985.5" y1="456.9531" y2="456.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1367.5" y="465.8555"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="1379.5" y="471.1636">name</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1367.5" y="478.6602"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="48" x="1379.5" y="483.9683">columns</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1367.5" y="491.4648"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="1379.5" y="496.7729">isTerminated</text><ellipse cx="1370.5" cy="524.0742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="1379.5" y="526.3823">getName(): String</text><ellipse cx="1370.5" cy="536.8789" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="1379.5" y="539.187">isValidName(name : String): boolean</text><ellipse cx="1370.5" cy="549.6836" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="1379.5" y="551.9917">getNbRows(): int</text><ellipse cx="1370.5" cy="562.4883" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="1379.5" y="564.7964">getCellValue(columnName : String, row : int): String</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="1379.5" y="577.6011">{exception IllegalColumnException, IllegalRowException}</text><ellipse cx="1370.5" cy="588.0977" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="434" x="1379.5" y="590.4058">canHaveAsCellValue(columnName : String, row : int, value : String): boolean</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="1379.5" y="603.2104">{exception IllegalColumnException, IllegalRowException}</text><ellipse cx="1370.5" cy="613.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="1379.5" y="616.0151">getNbColumns() : int</text><ellipse cx="1370.5" cy="626.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="427" x="1379.5" y="628.8198">getColumnAt(index : int) : Column {exception IndexOutOfBoundsException}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1367.5" y="636.3164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="1379.5" y="641.6245">canHaveAsColumn(column : Column) : boolean</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1367.5" y="649.1211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="1379.5" y="654.4292">canHaveAsColumnAt(index : int, column : Column): boolean</text><ellipse cx="1370.5" cy="664.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="1379.5" y="667.2339">hasProperColumns() : boolean</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1367.5" y="674.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="1379.5" y="680.0386">getColumnIndex(name : String) : int</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1367.5" y="687.5352"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="1379.5" y="692.8433">getColumn(name : String) : Column</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1367.5" y="700.3398"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="1379.5" y="705.6479">isAlreadyUsedColumnName(name : String) : boolean</text><ellipse cx="1370.5" cy="716.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="1379.5" y="718.4526">getColumnNames() : ArrayList&lt;String&gt;</text><polygon fill="#FFFF44" points="1370.5,723.9492,1374.5,727.9492,1370.5,731.9492,1366.5,727.9492" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="405" x="1379.5" y="731.2573">canHaveAsColumnName(columnName : String, name : String): boolean</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="1379.5" y="744.062">{exception IllegalColumnException}</text><ellipse cx="1370.5" cy="754.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="468" x="1379.5" y="756.8667">getColumnType(columnName : String) : String {exception IllegalColumnException}</text><ellipse cx="1370.5" cy="767.3633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="601" x="1379.5" y="769.6714">canHaveAsColumnType(columnName : String, type : String) : boolean {exception IllegalColumnException}</text><ellipse cx="1370.5" cy="780.168" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="512" x="1379.5" y="782.4761">getColumnDefaultValue(columnName : String) : String {exception IllegalColumnException}</text><ellipse cx="1370.5" cy="792.9727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="591" x="1379.5" y="795.2808">canHaveAsDefaultValue(columnName : String, defaultValue : String) {exception IllegalColumnException}</text><ellipse cx="1370.5" cy="805.7773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="512" x="1379.5" y="808.0854">getColumnAllowBlank(columnName : String) : boolean {exception IllegalColumnException}</text><ellipse cx="1370.5" cy="818.582" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="1379.5" y="820.8901">canHaveAsColumnAllowBlanks(columnName : String, blanksAllowed : boolean) : boolean</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="1379.5" y="833.6948">{exception IllegalColumnException}</text><ellipse cx="1370.5" cy="844.1914" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="1379.5" y="846.4995">isTerminated() : boolean</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1360.5" x2="1643" y1="509.7695" y2="509.7695"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="1643" y="513.0776">Inspectors</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1703" x2="1985.5" y1="509.7695" y2="509.7695"/><ellipse cx="1370.5" cy="873.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="1379.5" y="876.1089">setName(name : String) {exception IllegalArgumentException}</text><ellipse cx="1370.5" cy="886.6055" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="52" x="1379.5" y="888.9136">addRow()</text><ellipse cx="1370.5" cy="899.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="339" x="1379.5" y="901.7183">removeRow(row : int) {exception IllegalArgumentException}</text><ellipse cx="1370.5" cy="912.2148" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="1379.5" y="914.5229">setCellValue(columnName : String, row : int, value : String)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="1379.5" y="927.3276">{exception IllegalColumnException, IllegalRowException}</text><ellipse cx="1370.5" cy="937.8242" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="357" x="1379.5" y="940.1323">addColumnAt(index : int) {exception IllegalArgumentException}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1367.5" y="947.6289"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="461" x="1379.5" y="952.937">addColumnAt(index : int, column : Column) {exception IllegalArgumentException}</text><ellipse cx="1370.5" cy="963.4336" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="1379.5" y="965.7417">addColumn() {exception IllegalArgumentException}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1367.5" y="973.2383"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="458" x="1379.5" y="978.5464">setColumnAt(index : int, column : Column) {exception IllegalArgumentException}</text><ellipse cx="1370.5" cy="989.043" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="397" x="1379.5" y="991.3511">removeColumnAt(index : int) {exception IndexOutOfBoundsException}</text><ellipse cx="1370.5" cy="1001.8477" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="546" x="1379.5" y="1004.1558">removeColumn(name : String) {exception IndexOutOfBoundsException, IllegalColumnException}</text><ellipse cx="1370.5" cy="1014.6523" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="308" x="1379.5" y="1016.9604">setColumnName(columnName : String, name : String)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="1379.5" y="1029.7651">{exception IllegalColumnException, IllegalArgumentException}</text><ellipse cx="1370.5" cy="1040.2617" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="1379.5" y="1042.5698">setColumnType(columnName : String, type : String)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="1379.5" y="1055.3745">{exception IllegalColumnException, IllegalArgumentException}</text><ellipse cx="1370.5" cy="1065.8711" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="384" x="1379.5" y="1068.1792">setColumnDefaultValue(columnName : String, defaultValue : String)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="1379.5" y="1080.9839">{exception IllegalColumnException, IllegalArgumentException}</text><ellipse cx="1370.5" cy="1091.4805" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="401" x="1379.5" y="1093.7886">setColumnAllowBlanks(columnName : String, blanksAllowed : boolean)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="1379.5" y="1106.5933">{exception IllegalColumnException, IllegalArgumentException}</text><ellipse cx="1370.5" cy="1117.0898" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="1379.5" y="1119.3979">terminate()</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1360.5" x2="1648" y1="859.4961" y2="859.4961"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="50" x="1648" y="862.8042">Mutators</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1698" x2="1985.5" y1="859.4961" y2="859.4961"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="1365.5" y="1149.0073">manage Column</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1360.5" x2="1634" y1="1132.3945" y2="1132.3945"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="1634" y="1135.7026">Responsibility</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1712" x2="1985.5" y1="1132.3945" y2="1132.3945"/><!--class Column--><rect fill="#FEFECE" filter="url(#fgdyaexxkhmuq)" height="500.1641" id="Column" style="stroke: #A80036; stroke-width: 1.5;" width="481" x="1552.5" y="1511.4531"/><ellipse cx="1765.75" cy="1527.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1768.7188,1533.0938 Q1768.1406,1533.3906 1767.5,1533.5313 Q1766.8594,1533.6875 1766.1563,1533.6875 Q1763.6563,1533.6875 1762.3281,1532.0469 Q1761.0156,1530.3906 1761.0156,1527.2656 Q1761.0156,1524.1406 1762.3281,1522.4844 Q1763.6563,1520.8281 1766.1563,1520.8281 Q1766.8594,1520.8281 1767.5,1520.9844 Q1768.1563,1521.1406 1768.7188,1521.4375 L1768.7188,1524.1563 Q1768.0938,1523.5781 1767.5,1523.3125 Q1766.9063,1523.0313 1766.2813,1523.0313 Q1764.9375,1523.0313 1764.25,1524.1094 Q1763.5625,1525.1719 1763.5625,1527.2656 Q1763.5625,1529.3594 1764.25,1530.4375 Q1764.9375,1531.5 1766.2813,1531.5 Q1766.9063,1531.5 1767.5,1531.2344 Q1768.0938,1530.9531 1768.7188,1530.375 L1768.7188,1533.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="46" x="1786.25" y="1531.6074">Column</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1553.5" x2="2032.5" y1="1543.4531" y2="1543.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1560.5" y="1552.3555"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="1572.5" y="1557.6636">name:String</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1560.5" y="1565.1602"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="1572.5" y="1570.4683">allowsBlanks: boolean</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1560.5" y="1577.9648"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="1572.5" y="1583.2729">defaultValue: String = ""</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1560.5" y="1590.7695"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="1572.5" y="1596.0776">values : List&lt;String&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1560.5" y="1603.5742"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="1572.5" y="1608.8823">isTerminated: boolean</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1560.5" y="1616.3789"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="127" x="1572.5" y="1621.687">allTypes: List&lt;String&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="1572.5" x2="1699.5" y1="1623.687" y2="1623.687"/><ellipse cx="1563.5" cy="1648.9883" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="1572.5" y="1651.2964">getName() : String</text><ellipse cx="1563.5" cy="1661.793" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="1572.5" y="1664.1011">canHaveAsName(name : String) : boolean</text><ellipse cx="1563.5" cy="1674.5977" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="99" x="1572.5" y="1676.9058">getType() : String</text><ellipse cx="1563.5" cy="1687.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="1572.5" y="1689.7104">getAllTypes() : ArrayList&lt;String&gt;</text><ellipse cx="1563.5" cy="1700.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="226" x="1572.5" y="1702.5151">canHaveAsType(type : String) : boolean</text><ellipse cx="1563.5" cy="1713.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="1572.5" y="1715.3198">isBlanksAllowed() : boolean</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1560.5" y="1722.8164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="1572.5" y="1728.1245">canHaveBlanksAllowed(blanksAllowed : boolean) : boolean</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1560.5" y="1735.6211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="1572.5" y="1740.9292">isValueBlank(value : String) : boolean</text><ellipse cx="1563.5" cy="1751.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="1572.5" y="1753.7339">getDefaultValue() : String</text><ellipse cx="1563.5" cy="1764.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="1572.5" y="1766.5386">getNbValues() : int</text><ellipse cx="1563.5" cy="1777.0352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="406" x="1572.5" y="1779.3433">getValueAt(index : int) : String {exception IndexOutOfBoundsException}</text><polygon fill="#FFFF44" points="1563.5,1784.8398,1567.5,1788.8398,1563.5,1792.8398,1559.5,1788.8398" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="1572.5" y="1792.1479">canHaveAsValue(value : String) : boolean</text><ellipse cx="1563.5" cy="1802.6445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="314" x="1572.5" y="1804.9526">canHaveAsDefaultValue(defaultValue : String) : boolean</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1560.5" y="1812.4492"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="1572.5" y="1817.7573">canHaveAsValueAt(index : int, value : String) : boolean</text><ellipse cx="1563.5" cy="1828.2539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="1572.5" y="1830.562">hasProperValues() : boolean</text><ellipse cx="1563.5" cy="1841.0586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="1572.5" y="1843.3667">isTerminated() : boolean</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1553.5" x2="1763" y1="1634.6836" y2="1634.6836"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="1763" y="1637.9917">Inspectors</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1823" x2="2032.5" y1="1634.6836" y2="1634.6836"/><ellipse cx="1563.5" cy="1870.668" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="1572.5" y="1872.9761">setName(name : String) {exception IllegalArgumentException}</text><ellipse cx="1563.5" cy="1883.4727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="455" x="1572.5" y="1885.7808">setBlankAllowed(blanksAllowed : boolean) {exception IllegalArgumentException}</text><ellipse cx="1563.5" cy="1896.2773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="391" x="1572.5" y="1898.5854">setDefaultValue(value : String) {exception IllegalArgumentException}</text><ellipse cx="1563.5" cy="1909.082" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="429" x="1572.5" y="1911.3901">addValueAt(index : int, value : String) {exception IllegalArgumentException}</text><ellipse cx="1563.5" cy="1921.8867" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="1572.5" y="1924.1948">addValue(value : String) {exception IllegalArgumentException}</text><ellipse cx="1563.5" cy="1934.6914" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="1572.5" y="1936.9995">addValue() {exception IllegalArgumentException}</text><ellipse cx="1563.5" cy="1947.4961" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="426" x="1572.5" y="1949.8042">setValueAt(index : int, value : String) {exception IllegalArgumentException}</text><ellipse cx="1563.5" cy="1960.3008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="367" x="1572.5" y="1962.6089">removeValueAt(index : int) {exception IllegalArgumentException}</text><ellipse cx="1563.5" cy="1973.1055" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="1572.5" y="1975.4136">terminate()</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1553.5" x2="1768" y1="1856.3633" y2="1856.3633"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="50" x="1768" y="1859.6714">Mutators</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1818" x2="2032.5" y1="1856.3633" y2="1856.3633"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="1558.5" y="2005.0229">Manage list with correct entries</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1553.5" x2="1754" y1="1988.4102" y2="1988.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="1754" y="1991.7183">Responsibility</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1832" x2="2032.5" y1="1988.4102" y2="1988.4102"/><!--class BooleanColumn--><rect fill="#FEFECE" filter="url(#fgdyaexxkhmuq)" height="108.0234" id="BooleanColumn" style="stroke: #A80036; stroke-width: 1.5;" width="260" x="1368" y="2379.9531"/><ellipse cx="1445.25" cy="2395.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1448.2188,2401.5938 Q1447.6406,2401.8906 1447,2402.0313 Q1446.3594,2402.1875 1445.6563,2402.1875 Q1443.1563,2402.1875 1441.8281,2400.5469 Q1440.5156,2398.8906 1440.5156,2395.7656 Q1440.5156,2392.6406 1441.8281,2390.9844 Q1443.1563,2389.3281 1445.6563,2389.3281 Q1446.3594,2389.3281 1447,2389.4844 Q1447.6563,2389.6406 1448.2188,2389.9375 L1448.2188,2392.6563 Q1447.5938,2392.0781 1447,2391.8125 Q1446.4063,2391.5313 1445.7813,2391.5313 Q1444.4375,2391.5313 1443.75,2392.6094 Q1443.0625,2393.6719 1443.0625,2395.7656 Q1443.0625,2397.8594 1443.75,2398.9375 Q1444.4375,2400 1445.7813,2400 Q1446.4063,2400 1447,2399.7344 Q1447.5938,2399.4531 1448.2188,2398.875 L1448.2188,2401.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="97" x="1465.75" y="2400.1074">BooleanColumn</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1369" x2="1627" y1="2411.9531" y2="2411.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1376" y="2420.8555"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="1388" y="2426.1636">type: String = "Boolean"</text><ellipse cx="1379" cy="2453.4648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="1388" y="2455.7729">getType(): String</text><ellipse cx="1379" cy="2466.2695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="1388" y="2468.5776">canHaveAsType(type : String) : boolean</text><ellipse cx="1379" cy="2479.0742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="1388" y="2481.3823">canHaveAsValue(value : String) : boolean</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1369" x2="1468" y1="2439.1602" y2="2439.1602"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="1468" y="2442.4683">Inspectors</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1528" x2="1627" y1="2439.1602" y2="2439.1602"/><!--class IntegerColumn--><rect fill="#FEFECE" filter="url(#fgdyaexxkhmuq)" height="108.0234" id="IntegerColumn" style="stroke: #A80036; stroke-width: 1.5;" width="260" x="1663" y="2379.9531"/><ellipse cx="1743.25" cy="2395.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1746.2188,2401.5938 Q1745.6406,2401.8906 1745,2402.0313 Q1744.3594,2402.1875 1743.6563,2402.1875 Q1741.1563,2402.1875 1739.8281,2400.5469 Q1738.5156,2398.8906 1738.5156,2395.7656 Q1738.5156,2392.6406 1739.8281,2390.9844 Q1741.1563,2389.3281 1743.6563,2389.3281 Q1744.3594,2389.3281 1745,2389.4844 Q1745.6563,2389.6406 1746.2188,2389.9375 L1746.2188,2392.6563 Q1745.5938,2392.0781 1745,2391.8125 Q1744.4063,2391.5313 1743.7813,2391.5313 Q1742.4375,2391.5313 1741.75,2392.6094 Q1741.0625,2393.6719 1741.0625,2395.7656 Q1741.0625,2397.8594 1741.75,2398.9375 Q1742.4375,2400 1743.7813,2400 Q1744.4063,2400 1745,2399.7344 Q1745.5938,2399.4531 1746.2188,2398.875 L1746.2188,2401.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="91" x="1763.75" y="2400.1074">IntegerColumn</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1664" x2="1922" y1="2411.9531" y2="2411.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1671" y="2420.8555"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="1683" y="2426.1636">type: String = "Integer"</text><ellipse cx="1674" cy="2453.4648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="1683" y="2455.7729">getType(): String</text><ellipse cx="1674" cy="2466.2695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="1683" y="2468.5776">canHaveAsType(type : String) : boolean</text><ellipse cx="1674" cy="2479.0742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="1683" y="2481.3823">canHaveAsValue(value : String) : boolean</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1664" x2="1763" y1="2439.1602" y2="2439.1602"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="1763" y="2442.4683">Inspectors</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1823" x2="1922" y1="2439.1602" y2="2439.1602"/><!--class EmailColumn--><rect fill="#FEFECE" filter="url(#fgdyaexxkhmuq)" height="108.0234" id="EmailColumn" style="stroke: #A80036; stroke-width: 1.5;" width="260" x="1958" y="2379.9531"/><ellipse cx="2044.25" cy="2395.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2047.2188,2401.5938 Q2046.6406,2401.8906 2046,2402.0313 Q2045.3594,2402.1875 2044.6563,2402.1875 Q2042.1563,2402.1875 2040.8281,2400.5469 Q2039.5156,2398.8906 2039.5156,2395.7656 Q2039.5156,2392.6406 2040.8281,2390.9844 Q2042.1563,2389.3281 2044.6563,2389.3281 Q2045.3594,2389.3281 2046,2389.4844 Q2046.6563,2389.6406 2047.2188,2389.9375 L2047.2188,2392.6563 Q2046.5938,2392.0781 2046,2391.8125 Q2045.4063,2391.5313 2044.7813,2391.5313 Q2043.4375,2391.5313 2042.75,2392.6094 Q2042.0625,2393.6719 2042.0625,2395.7656 Q2042.0625,2397.8594 2042.75,2398.9375 Q2043.4375,2400 2044.7813,2400 Q2045.4063,2400 2046,2399.7344 Q2046.5938,2399.4531 2047.2188,2398.875 L2047.2188,2401.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="79" x="2064.75" y="2400.1074">EmailColumn</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1959" x2="2217" y1="2411.9531" y2="2411.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1966" y="2420.8555"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="1978" y="2426.1636">type: String = "Email"</text><ellipse cx="1969" cy="2453.4648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="1978" y="2455.7729">getType(): String</text><ellipse cx="1969" cy="2466.2695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="1978" y="2468.5776">canHaveAsType(type : String) : boolean</text><ellipse cx="1969" cy="2479.0742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="1978" y="2481.3823">canHaveAsValue(value : String) : boolean</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1959" x2="2058" y1="2439.1602" y2="2439.1602"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="2058" y="2442.4683">Inspectors</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2118" x2="2217" y1="2439.1602" y2="2439.1602"/><!--class StringColumn--><rect fill="#FEFECE" filter="url(#fgdyaexxkhmuq)" height="108.0234" id="StringColumn" style="stroke: #A80036; stroke-width: 1.5;" width="260" x="2253" y="2379.9531"/><ellipse cx="2337.25" cy="2395.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2340.2188,2401.5938 Q2339.6406,2401.8906 2339,2402.0313 Q2338.3594,2402.1875 2337.6563,2402.1875 Q2335.1563,2402.1875 2333.8281,2400.5469 Q2332.5156,2398.8906 2332.5156,2395.7656 Q2332.5156,2392.6406 2333.8281,2390.9844 Q2335.1563,2389.3281 2337.6563,2389.3281 Q2338.3594,2389.3281 2339,2389.4844 Q2339.6563,2389.6406 2340.2188,2389.9375 L2340.2188,2392.6563 Q2339.5938,2392.0781 2339,2391.8125 Q2338.4063,2391.5313 2337.7813,2391.5313 Q2336.4375,2391.5313 2335.75,2392.6094 Q2335.0625,2393.6719 2335.0625,2395.7656 Q2335.0625,2397.8594 2335.75,2398.9375 Q2336.4375,2400 2337.7813,2400 Q2338.4063,2400 2339,2399.7344 Q2339.5938,2399.4531 2340.2188,2398.875 L2340.2188,2401.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="83" x="2357.75" y="2400.1074">StringColumn</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2254" x2="2512" y1="2411.9531" y2="2411.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2261" y="2420.8555"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="2273" y="2426.1636">type: String = "String"</text><ellipse cx="2264" cy="2453.4648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="2273" y="2455.7729">getType(): String</text><ellipse cx="2264" cy="2466.2695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="2273" y="2468.5776">canHaveAsType(type : String) : boolean</text><ellipse cx="2264" cy="2479.0742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="2273" y="2481.3823">canHaveAsValue(value : String) : boolean</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2254" x2="2353" y1="2439.1602" y2="2439.1602"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="2353" y="2442.4683">Inspectors</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2413" x2="2512" y1="2439.1602" y2="2439.1602"/><!--link UIWindowHandler to Widget--><path d="M750.8192,109.656 C664.1377,124.8962 528,156.3324 528,203.4531 C528,203.4531 528,203.4531 528,790.4531 C528,941.9307 528,1120.1582 528,1211.7633 " fill="none" id="UIWindowHandler-Widget" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="528,1216.8652,532,1207.8652,528,1211.8652,524,1207.8652,528,1216.8652" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="23" x="529" y="312.52">has</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="735.1693" y="107.0802">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="27" x="499.2703" y="1205.7919">0...*</text><!--link LabelWidget to Widget--><path d="M232.0542,332.1395 C229.0004,437.7355 227.8633,866.0077 394,1155.9531 C403.8459,1173.1364 417.167,1189.0523 431.6045,1203.2577 " fill="none" id="LabelWidget-Widget" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="436.3985,1198.1566,446.3268,1216.8765,426.8916,1208.4338,436.3985,1198.1566" style="stroke: #A80036; stroke-width: 1.0;"/><!--link EditorWidget to LabelWidget--><path d="M383.1661,123.3371 C354.2476,158.8898 300.1792,225.3622 265.4234,268.0914 " fill="none" id="EditorWidget-LabelWidget" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="270.7582,272.626,252.7075,283.7244,259.8974,263.7918,270.7582,272.626" style="stroke: #A80036; stroke-width: 1.0;"/><!--link CheckBoxWidget to Widget--><path d="M393.4803,332.2898 C410.828,453.5985 488.2687,995.1219 517.1202,1196.8732 " fill="none" id="CheckBoxWidget-Widget" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="524.0543,1195.9151,519.9562,1216.7047,510.1953,1197.8971,524.0543,1195.9151" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ButtonWidget to LabelWidget--><path d="M250.6666,123.3371 C247.3773,157.71 241.3224,220.9844 237.2289,263.7609 " fill="none" id="ButtonWidget-LabelWidget" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="244.192,264.4822,235.3185,283.7244,230.2556,263.1485,244.192,264.4822" style="stroke: #A80036; stroke-width: 1.0;"/><!--link SwitchBoxWidget to LabelWidget--><path d="M107.5671,123.3371 C131.5088,158.5752 176.0879,224.1881 205.1424,266.9514 " fill="none" id="SwitchBoxWidget-LabelWidget" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="211.0887,263.2475,216.5384,283.7244,199.5086,271.1154,211.0887,263.2475" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ColumnWidget to Widget--><path d="M79.1554,332.2459 C63.2297,441.9316 12.7312,896.8671 224,1155.9531 C264.9474,1206.1683 330.1357,1234.8711 389.6644,1251.2591 " fill="none" id="ColumnWidget-Widget" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="391.5367,1244.5126,409.173,1256.2584,388.0613,1258.0744,391.5367,1244.5126" style="stroke: #A80036; stroke-width: 1.0;"/><!--link UIWindowHandler to TablesWindow--><path d="M798.9473,134.4071 C775.9061,171.4503 739.8328,229.445 715.8116,268.0637 " fill="none" id="UIWindowHandler-TablesWindow" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="712.9436,272.6746,721.0938,267.1452,715.5845,268.429,714.3008,262.9197,712.9436,272.6746" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="60" x="761" y="208.02">manages</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="786.6323" y="153.6316">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="708.252" y="261.9025">1</text><!--link UIWindowHandler to TableDesignWindow--><path d="M842.8831,134.4071 C865.747,171.4503 901.5428,229.445 925.3793,268.0637 " fill="none" id="UIWindowHandler-TableDesignWindow" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="928.2252,272.6746,926.902,262.9151,925.5991,268.4198,920.0943,267.1168,928.2252,272.6746" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="60" x="890" y="208.02">manages</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="837.845" y="153.6316">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="915.473" y="261.9025">1</text><!--link UIWindowHandler to TableRowsWindow--><path d="M888.4022,134.1708 C960.734,171.9641 1075.1791,231.7617 1149.1745,270.4243 " fill="none" id="UIWindowHandler-TableRowsWindow" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1153.9891,272.9399,1147.8648,265.2267,1149.5576,270.6244,1144.16,272.3172,1153.9891,272.9399" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="60" x="1035" y="208.02">manages</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="891.2995" y="153.6248">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="1132.4526" y="261.9526">1</text><!--link TablesWindow to Widget--><path d="M670.9934,343.28 C662.6503,359.4756 653.6143,379.2078 648,397.9531 C624.6686,475.853 557.6026,1025.4983 535.3061,1211.5574 " fill="none" id="TablesWindow-Widget" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="534.6916,1216.688,539.7337,1208.2277,535.2863,1211.7235,531.7905,1207.2761,534.6916,1216.688" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="23" x="649" y="795.02">has</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="658.8673" y="362.7528">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="27" x="537.1525" y="1205.9902">0...*</text><!--link TableDesignWindow to Widget--><path d="M829.3623,337.1909 C797.8191,350.606 767.0697,370.0057 747,397.9531 C648.3281,535.3553 757.8931,1007.3872 677,1155.9531 C664.9828,1178.0236 646.8661,1197.3419 627.3613,1213.585 " fill="none" id="TableDesignWindow-Widget" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="623.4433,1216.7925,632.9411,1214.1865,627.3122,1213.6252,627.8734,1207.9963,623.4433,1216.7925" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="23" x="748" y="795.02">has</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="813.3777" y="335.6672">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="27" x="606.9423" y="1205.7099">0...*</text><!--link TableRowsWindow to Widget--><path d="M1105.3593,339.3266 C1074.3447,349.6815 1046.2727,361.4901 1035,372.9531 C777.9934,634.2999 1018.9906,881.5262 776,1155.9531 C743.1141,1193.0936 695.9104,1219.3835 651.4936,1237.5027 " fill="none" id="TableRowsWindow-Widget" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="646.6502,1239.4509,656.4928,1239.8032,651.289,1237.585,653.5072,1232.3812,646.6502,1239.4509" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="23" x="1011" y="795.02">has</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="1089.3209" y="338.0151">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="27" x="654.7031" y="1234.0226">0...*</text><!--link TablesWindow to TableHandler--><path d="M794.2719,339.4965 C800.2395,340.7969 806.1788,341.9655 812,342.9531 C1189.8375,407.0542 1290.0603,374.877 1673,389.9531 C1691.38,390.6767 1987.1858,390.4944 2004,397.9531 C2111.8481,445.7941 2203.6021,541.0667 2269.1204,625.7638 " fill="none" id="TablesWindow-TableHandler" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2272.2205,629.7888,2269.8977,620.2178,2269.1695,625.8276,2263.5597,625.0993,2272.2205,629.7888" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="95" x="1674" y="386.02">communicates</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="802.1497" y="338.3483">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="2258.9515" y="618.7159">1</text><!--link TableDesignWindow to TableDesignHandler--><path d="M1070.5048,340.0308 C1076.3989,341.1228 1082.2534,342.1078 1088,342.9531 C1389.9315,387.3648 1472.2354,327.4211 1774,372.9531 C1803.5264,377.4082 1809.4003,386.0144 1839,389.9531 C1864.1129,393.2948 2727.2261,389.1994 2751,397.9531 C2867.5913,440.8828 2975.5879,526.5753 3058.4864,606.967 " fill="none" id="TableDesignWindow-TableDesignHandler" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3062.4149,610.791,3058.7556,601.6472,3058.832,607.3035,3053.1756,607.3799,3062.4149,610.791" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="95" x="1840" y="386.02">communicates</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="1078.4809" y="338.689">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="3047.598" y="599.9582">1</text><!--link TableRowsWindow to TableRowsHandler--><path d="M1336.5386,310.2357 C1809.4708,319.8269 3578.0165,358.2091 3690,397.9531 C3841.6006,451.7575 3985.3716,566.6985 4083.326,658.3637 " fill="none" id="TableRowsWindow-TableRowsHandler" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4087.0819,661.888,4083.256,652.8126,4083.4358,658.4666,4077.7818,658.6464,4087.0819,661.888" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="95" x="3644" y="386.02">communicates</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="1344.5701" y="306.9697">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="4071.6866" y="651.0961">1</text><!--link Table to TableManager--><path d="M1990.7124,1146.0915 C1995.1252,1149.443 1999.5551,1152.732 2004,1155.9531 C2210.8572,1305.8549 2303.1747,1270.5237 2529,1389.9531 C2558.5484,1405.58 2588.616,1422.0894 2618.7573,1439.1164 " fill="none" id="Table-TableManager" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1986.6646,1142.9962,1991.384,1151.6407,1990.6364,1146.0335,1996.2436,1145.2858,1986.6646,1142.9962" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="23" x="1994.2856" y="1148.1557">0..*</text><!--link TableHandler to TableManager--><path d="M2501.5538,951.0662 C2593.2404,1069.297 2721.768,1235.0343 2838.7178,1385.8422 " fill="none" id="TableHandler-TableManager" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2841.826,1389.8503,2839.4715,1380.287,2838.7619,1385.8992,2833.1497,1385.1896,2841.826,1389.8503" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="2827.8912" y="1379.2134">1</text><!--link TableDesignHandler to TableManager--><path d="M3203.3615,969.9643 C3192.5796,1086.2888 3178.1309,1242.1739 3164.908,1384.835 " fill="none" id="TableDesignHandler-TableManager" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3164.4381,1389.9042,3169.2518,1381.3119,3164.8997,1384.9256,3161.286,1380.5734,3164.4381,1389.9042" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="3157.0564" y="1379.2684">1</text><!--link TableRowsHandler to TableManager--><path d="M4067.7306,919.1437 C3935.1,1038.2782 3731.2275,1221.4051 3547.4135,1386.5146 " fill="none" id="TableRowsHandler-TableManager" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3543.6208,1389.9214,3552.9893,1386.8831,3547.3405,1386.5802,3547.6434,1380.9315,3543.6208,1389.9214" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="3543.9412" y="1379.286">1</text><!--link Column to BooleanColumn--><path d="M1655.8752,2030.5787 C1638.6943,2083.5809 1627,2139.7495 1627,2194.4531 C1627,2194.4531 1627,2194.4531 1627,2318.4531 C1627,2334.9115 1603.3986,2358.4217 1576.386,2379.94 " fill="none" id="Column-BooleanColumn" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1649.261,2028.2861,1662.3059,2011.5879,1662.5213,2032.7765,1649.261,2028.2861" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Column to IntegerColumn--><path d="M1793,2031.7381 C1793,2085.6403 1793,2141.8444 1793,2194.4531 C1793,2194.4531 1793,2194.4531 1793,2318.4531 C1793,2338.5052 1793,2360.5155 1793,2379.8944 " fill="none" id="Column-IntegerColumn" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1786.0001,2031.6003,1793,2011.6003,1800.0001,2031.6003,1786.0001,2031.6003" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Column to EmailColumn--><path d="M1930.1248,2030.5787 C1947.3057,2083.5809 1959,2139.7495 1959,2194.4531 C1959,2194.4531 1959,2194.4531 1959,2318.4531 C1959,2334.9115 1982.6014,2358.4217 2009.614,2379.94 " fill="none" id="Column-EmailColumn" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1923.4787,2032.7765,1923.6941,2011.5879,1936.739,2028.2861,1923.4787,2032.7765" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Column to StringColumn--><path d="M1934.1973,2027.9119 C1964.2363,2067.345 1998.8935,2104.2851 2038,2132.9531 C2118.5015,2191.9668 2254,2094.6377 2254,2194.4531 C2254,2194.4531 2254,2194.4531 2254,2318.4531 C2254,2334.9115 2277.6014,2358.4217 2304.614,2379.94 " fill="none" id="Column-StringColumn" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1928.5355,2032.0287,1922.2624,2011.7888,1939.788,2023.6991,1928.5355,2032.0287" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Table to Column--><path d="M1719.8299,1169.3851 C1734.0044,1284.0806 1749.2105,1407.1229 1762.0682,1511.1629 " fill="none" id="Table-Column" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1718.1959,1156.1629,1714.9621,1162.6083,1719.6678,1168.0723,1722.9017,1161.627,1718.1959,1156.1629" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="23" x="1737.8085" y="1500.5762">0..*</text><!--
@startuml
title Class Diagram

package "window" {
    class Widget{
        paint(Graphics)
        handleKeyEvent(int, int, char): boolean
        handleMouseEvent(int, int ,int): boolean
        isBlocking(): boolean
        containsPoint(int, int): boolean
    }
    UIWindowHandler "1" - -> "0...*" Widget: has



    class LabelWidget{
    }
    LabelWidget - -|> Widget


    class EditorWidget{
    }
    EditorWidget - -|> LabelWidget

    class CheckBoxWidget{
    }
    CheckBoxWidget - -|> Widget
    class ButtonWidget{
    }
    ButtonWidget - -|> LabelWidget


    class SwitchBoxWidget{

    }
    SwitchBoxWidget - -|> LabelWidget

    class ColumnWidget{
    }
    ColumnWidget - -|> Widget


    class UIWindowHandler{
    __Responsibilities__
        managing windows
    }

    class TablesWindow{
    __Responsibilities__
        generating tables window widgets
    }
    class TableDesignWindow{
    __Responsibilities__
        generating table design window widgets
    }
    class TableRowsWindow{
    __Responsibilities__
        generating table rows window widgets
    }
}
    UIWindowHandler "1" - -> "1" TablesWindow: manages
    UIWindowHandler "1" - -> "1" TableDesignWindow: manages
    UIWindowHandler "1" - -> "1" TableRowsWindow: manages

    TablesWindow "1" - -> "0...*" Widget: has
    TableDesignWindow "1" - -> "0...*" Widget: has
    TableRowsWindow "1" - -> "0...*" Widget: has






package "tablr" {


    TablesWindow "1" - -> "1" TableHandler:  communicates
    TableDesignWindow "1" - -> "1" TableDesignHandler:  communicates
    TableRowsWindow "1" - -> "1" TableRowsHandler:  communicates


    class TableHandler{
        tableManager : TableManager {readOnly}
        terminated : boolean
        __Inspector__
        getNbTables() : int
        hasAsTable(name : String) : boolean
        getTableNames() : ArrayList<String>
        canHaveAsName(tableName : String, newTableName: String) : boolean {exception IllegalTableException}
        getOpenTable() : String
        isTerminated() : boolean
        createTableDesignHandler() : TableDesignHandler
        createTableRowsHandler() : TableRowsHandler

        __Mutator__
        <<constructor>> TableHandler()
        setTableName(tableName : String, newName : String) : void {exception IllegalTableException, IllegalArgumentException}
        addTable() : void
        removeTable(tableName : String): void {exception IllegalTableException}
        openTable(tableName : String): void  {exception IllegalTableException}
        - getTableManager() : TableManager
        - canHaveAsTableManager(tableManager : TableManager) : boolean

        __Responsibilities__
        providing a controller for table mode
    }


    class TableDesignHandler{
        tableManager : TableManager {readOnly}
        terminated : boolean
        __Inspector__
        getOpenTable() : String
        getColumnNames() : ArrayList<String> {exception IllegalTableException}
        getColumnType(columnName : String) : String {exception IllegalColumnException, IllegalTableException}
        getColumnAllowBlank(columnName : String) : boolean {exception IllegalColumnException, IllegalTableException}
        getColumnDefaultValue(columnName : String) : String {exception IllegalColumnException, IllegalTableException}
        canHaveAsColumnName(columnName : String, newName : String) : boolean {exception IllegalColumnException, IllegalTableException}
        canHaveAsColumnType(columnName : String, type : String) : boolean {exception IllegalColumnException, IllegalTableException}
        canHaveAsColumnAllowBlanks(columnName : String, blanks : boolean) : boolean {exception IllegalColumnException, IllegalTableException}
        canHaveAsDefaultValue(columnName : String, newDefaultValue : String) : boolean {exception IllegalColumnException, IllegalTableException}
        isTerminated() : boolean
        - canHaveAsTableManager(tableManager : TableManager) : boolean

        __Mutator__
        <<constructor>> TableDesignHandler(mng : TableManager) : TableDesignHandler {exception IllegalArgumentException}
        setColumnName(columnName : String, newColumnName : String) : void {exception IllegalColumnException, IllegalArgumentException, IllegalTableException}
        setColumnType(columName : String, type : String) : void {exception IllegalColumnException, IllegalArgumentException, IllegalTableException}
        setColumnAllowBlanks(columnName : String, blanks : boolean) : void {exception IllegalColumnException, IllegalArgumentException, IllegalTableException}
        setColumnDefaultValue(columnName : String, newDefaultValue : String) : void {IllegalColumnException, IllegalArgumentException, IllegalTableException}
        addColumn() : void {exception IllegalTableException}
        removeColumn(columnName : String) : void {exception IllegalArgumentException, IllegalTableException}


        __Responsibilities__
        managing access to columns

    }

    class TableRowsHandler{
        tableManager : TableManager {readOnly}
        terminated : boolean
        __Inspector__
        getOpenTable() : String
        getColumnNames() : ArrayList<String> {exception IllegalTableException}
        getColumnType(columnName : String) : String {exception IllegalColumnException, IllegalTableException}
        canHaveAsCellValue(columnName : String, row : int, value : String) : boolean {exception IllegalColumnException, IllegalRowException, IllegalTableException}
        getCellValue(columnName : String, Row : int) : String {exception IllegalColumnException, IllegalRowException, IllegalTableException}
        isTerminated() : boolean
        - canHaveAsTableManager(tableManager : TableManager) : boolean

        __Mutator__
        setCellValue(columnName : String, row : int, newValue : String) : void {exception IllegalColumnException, IllegalRowException, IllegalArgumentException, IllegalTableException}
        addRow() : void {exception IllegalTableException}
        removeRow(row : int) : void {exception IllegalRowException, IllegalTableException}

        __Responsibilities__
        managing access to rows

    }


    class TableManager{
        tables : List<Table> [*] = new LinkedList<Table>
        currentTable : Table [0...1] = null
        terminated : boolean = false
        __Inspectors__
        ~ hasAsTable(name : String) : boolean
        ~ getTableNames() : ArrayList<String>
        ~ canHaveAsName(tableName : String, newTableName: String) : boolean {exception IllegalTableException}
        ~ getOpenTable() : String
        ~ getColumnNames() : ArrayList<String> {exception IllegalTableException}
        ~ getColumnType(columnName : String) : String {exception IllegalColumnException, IllegalTableException}
        ~ getColumnAllowBlank(columnName : String) : boolean {exception IllegalColumnException, IllegalTableException}
        ~ getColumnDefaultValue(columnName : String) : String {exception IllegalColumnException, IllegalTableException}
        ~ canHaveAsColumnName(columnName : String, newName : String) : boolean {exception IllegalColumnException, IllegalTableException}
        ~ canHaveAsColumnType(columnName : String, type : String) : boolean {exception IllegalColumnException, IllegalTableException}
        ~ canHaveAsColumnAllowBlanks(columnName : String, blanks : boolean) : boolean {exception IllegalColumnException, IllegalTableException}
        ~ canHaveAsDefaultValue(columnName : String, newDefaultValue : String) : boolean {exception IllegalColumnException, IllegalTableException}
        ~ getCellValue(columnName : String, Row : int) : String {exception IllegalColumnException, IllegalRowException, IllegalTableException}
        ~ canHaveAsCellValue(columnName : String, row : int, value : String) : boolean {exception IllegalColumnException, IllegalRowException, IllegalTableException}
        ~ canTerminate() : boolean
        ~ isTerminated() : boolean
        - getNbTables() : int
        - hasAsTable(table : Table) : boolean
        - getTableAt(index : int) : Table {exception IllegalArgumentException}
        - getTable(name : String) : Table {exception IllegalTableException}
        - canHaveAsTable(table : Table) : boolean
        - canHaveAsTableAt(index : int,table : Table) : boolean
        - getTableIndex(table : Table) : int {exception IllegalArgumentException}
        - hasProperTables() : boolean
        - getCurrentTable() : Table
        - canHaveAsCurrentTable(table : Table) : boolean

        __Mutators__
        ~ <<constructor>> TableManager()
        ~ setTableName(tableName : String, newName : String) : void {exception IllegalTableException, IllegalArgumentException}
        ~ addTable() : void
        ~ removeTable(tableName : String): void {exception IllegalTableException}
        ~ openTable(tableName : String): void  {exception IllegalTableException}
        ~ setColumnName(columnName : String, newColumnName : String) : void {exception IllegalColumnException, IllegalArgumentException, IllegalTableException}
        ~ setColumnType(columName : String, type : String) : void {exception IllegalColumnException, IllegalArgumentException, IllegalTableException}
        ~ setColumnAllowBlanks(columnName : String, blanks : boolean) : void {exception IllegalColumnException, IllegalArgumentException, IllegalTableException}
        ~ setColumnDefaultValue(columnName : String, newDefaultValue : String) : void {IllegalColumnException, IllegalArgumentException, IllegalTableException}
        ~ addColumn() : void {exception IllegalTableException}
        ~ removeColumn(columnName : String) : void {exception IllegalArgumentException, IllegalTableException}
        ~ setCellValue(columnName : String, row : int, newValue : String) : void {exception IllegalColumnException, IllegalRowException, IllegalArgumentException, IllegalTableException}
        ~ addRow() : void {exception IllegalTableException}
        ~ removeRow(row : int) : void {exception IllegalRowException, IllegalTableException}
        ~ terminate() : void {exception IllegalStateException}
        - addTableAt(index : int, table : Table) : void {exception IllegalArgumentException}
        - removeTableAt(index : int) : void {exception IllegalArgumentException}
        - removeTable(table : Table) : void {exception IllegalArgumentException}
        - appendTable(table : Table) : void {exception IllegalArgumentException}
        - insertAtFrontTable(table : Table) : void {exception IllegalArgumentException}
        - setCurrentTable(table : Table) : void {exception IllegalTableException}

        __Responsibility__
        manage tables and manage access to tables
    }

    Table "0..*" <- - TableManager
    TableHandler - -> "1" TableManager
    TableDesignHandler - -> "1" TableManager
    TableRowsHandler - -> "1" TableManager



    class Table{
        -name
        -columns
        -isTerminated
        __Inspectors__
        +getName(): String
        +isValidName(name : String): boolean
        +getNbRows(): int
        +getCellValue(columnName : String, row : int): String
            {exception IllegalColumnException, IllegalRowException}
        +canHaveAsCellValue(columnName : String, row : int, value : String): boolean
            {exception IllegalColumnException, IllegalRowException}
        +getNbColumns() : int
        +getColumnAt(index : int) : Column {exception IndexOutOfBoundsException}
        -canHaveAsColumn(column : Column) : boolean
        -canHaveAsColumnAt(index : int, column : Column): boolean
        +hasProperColumns() : boolean
        -getColumnIndex(name : String) : int
        -getColumn(name : String) : Column
        -isAlreadyUsedColumnName(name : String) : boolean
        +getColumnNames() : ArrayList<String>
        #canHaveAsColumnName(columnName : String, name : String): boolean
            {exception IllegalColumnException}
        +getColumnType(columnName : String) : String {exception IllegalColumnException}
        +canHaveAsColumnType(columnName : String, type : String) : boolean {exception IllegalColumnException}
        +getColumnDefaultValue(columnName : String) : String {exception IllegalColumnException}
        +canHaveAsDefaultValue(columnName : String, defaultValue : String) {exception IllegalColumnException}
        +getColumnAllowBlank(columnName : String) : boolean {exception IllegalColumnException}
        +canHaveAsColumnAllowBlanks(columnName : String, blanksAllowed : boolean) : boolean
            {exception IllegalColumnException}
        +isTerminated() : boolean
        __Mutators__
        +setName(name : String) {exception IllegalArgumentException}
        +addRow()
        +removeRow(row : int) {exception IllegalArgumentException}
        +setCellValue(columnName : String, row : int, value : String)
            {exception IllegalColumnException, IllegalRowException}
        +addColumnAt(index : int) {exception IllegalArgumentException}
        -addColumnAt(index : int, column : Column) {exception IllegalArgumentException}
        +addColumn() {exception IllegalArgumentException}
        -setColumnAt(index : int, column : Column) {exception IllegalArgumentException}
        +removeColumnAt(index : int) {exception IndexOutOfBoundsException}
        +removeColumn(name : String) {exception IndexOutOfBoundsException, IllegalColumnException}
        +setColumnName(columnName : String, name : String)
            {exception IllegalColumnException, IllegalArgumentException}
        +setColumnType(columnName : String, type : String)
            {exception IllegalColumnException, IllegalArgumentException}
        +setColumnDefaultValue(columnName : String, defaultValue : String)
            {exception IllegalColumnException, IllegalArgumentException}
        +setColumnAllowBlanks(columnName : String, blanksAllowed : boolean)
            {exception IllegalColumnException, IllegalArgumentException}
        +terminate()
        __Responsibility__
        manage Column
    }

    package "column" {

        Column <|- - BooleanColumn
        Column <|- - IntegerColumn
        Column <|- - EmailColumn
        Column <|- - StringColumn

        class Column{
            -name:String
            -allowsBlanks: boolean
            -defaultValue: String = ""
            -values : List<String>
            -isTerminated: boolean
            - {static} allTypes: List<String>
            __Inspectors__
            +getName() : String
            +canHaveAsName(name : String) : boolean
            + {abstract} getType() : String
            +getAllTypes() : ArrayList<String>
            + {abstract} canHaveAsType(type : String) : boolean
            +isBlanksAllowed() : boolean
            -canHaveBlanksAllowed(blanksAllowed : boolean) : boolean
            -isValueBlank(value : String) : boolean
            +getDefaultValue() : String
            +getNbValues() : int
            +getValueAt(index : int) : String {exception IndexOutOfBoundsException}
            #canHaveAsValue(value : String) : boolean
            +canHaveAsDefaultValue(defaultValue : String) : boolean
            -canHaveAsValueAt(index : int, value : String) : boolean
            +hasProperValues() : boolean
            +isTerminated() : boolean
            __Mutators__
            +setName(name : String) {exception IllegalArgumentException}
            +setBlankAllowed(blanksAllowed : boolean) {exception IllegalArgumentException}
            +setDefaultValue(value : String) {exception IllegalArgumentException}
            +addValueAt(index : int, value : String) {exception IllegalArgumentException}
            +addValue(value : String) {exception IllegalArgumentException}
            +addValue() {exception IllegalArgumentException}
            +setValueAt(index : int, value : String) {exception IllegalArgumentException}
            +removeValueAt(index : int) {exception IllegalArgumentException}
            +terminate()

        __Responsibility__
        Manage list with correct entries
        }

        Table *- - "0..*" Column

        class BooleanColumn{
            -type: String = "Boolean"
            __Inspectors__
            +getType(): String
            +canHaveAsType(type : String) : boolean
            +canHaveAsValue(value : String) : boolean
        }
        class StringColumn{
            -type: String = "String"
            __Inspectors__
            +getType(): String
            +canHaveAsType(type : String) : boolean
            +canHaveAsValue(value : String) : boolean
        }
        class EmailColumn{
            -type: String = "Email"
            __Inspectors__
            +getType(): String
            +canHaveAsType(type : String) : boolean
            +canHaveAsValue(value : String) : boolean
        }
        class IntegerColumn{
            -type: String = "Integer"
            __Inspectors__
            +getType(): String
            +canHaveAsType(type : String) : boolean
            +canHaveAsValue(value : String) : boolean
        }
    }
}
@enduml

PlantUML version 1.2017.15(Mon Jul 03 18:45:34 CEST 2017)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 10.0.2+13-Ubuntu-1ubuntu0.18.04.4
Operating System: Linux
OS Version: 4.15.0-46-generic
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>
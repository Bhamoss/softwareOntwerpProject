@startuml
title Class Diagram

class Textfield
{
}
Textfield --|> Element

class Label
{
}
Label --|> Element

class Toggle
{
}
Toggle --|> Button
class Button
{
}
Button --|> Element

class CellField
{
}
CellField --|> Textfield

class Element
{
    width: int
    height: int
    x: int
    y: int
    borderWidth: int
}
UIWindow "1" <--> "0...*" Element: has

class UIWindow
{
}

UIWindow "1" -- "1" TableHandler:  communicates
UIWindow "1" -- "1" TableDesignHandler:  communicates
UIWindow "1" -- "1" TableRowsHandler:  communicates


class TableHandler
{
    width : int
    create() : Table
    destroy(Table)
    editTableName(String)
    openTable(Table): Table
    __Responsibilities__
    managing tables
}
TableHandler "1" -- "0..*" Table
TableDesignHandler "1" -- "1" Table
TableRowsHandler "1" -- "1" Table


class TableDesignHandler
{

__Responsibility__
}

class TableRowsHandler
{
    Layout
__Responsibility__

}

class Table{
    name
    create(): Column
    destroy(Column)
    addRow()
    deleteRow(Integer)
__Responsibility__
manage Column
}



class Cell
{
editValue(value): {abstract}
__Responsibility__
Know:
maintain data
}
Cell <|-- BooleanCell
Cell <|-- IntegerCell
Cell <|-- EmailCell
Cell <|-- StringCell

class Column
{
name:String
allowsBlanks:Boolean

__Responsibility__
Know: column
manage Cells
}
Column "1" -- "1" Type: has
Enum Type
{
    defaultValue
    __PROBLEM__
    Can't you
    see this
    from cel
    type?
}

Table "1" -- "0..*" Column: has
Column "1" -- "0..*" Cell: has

class BooleanCell
{
value : Boolean
editValue(Boolean)
}
class StringCell
{
value : String
editValue(String)
}
class EmailCell
{
value : String
editValue(String)
}
class IntegerCell
{
value : Integer
editValue(Integer)
}
@enduml

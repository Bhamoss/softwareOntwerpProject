@startuml
title Class Diagram

class Widget{
    paint(Graphics)
    handleKeyEvent(int, int, char): boolean
    handleMouseEvent(int, int ,int): boolean
    isBlocking(): boolean
}
UIWindowHandler "1" <--> "0...*" Widget: has



class LabelWidget{
}
LabelWidget --|> Widget


class EditorWidget{
}
EditorWidget --|> LabelWidget

class CheckBoxWidget{
}
CheckBoxWidget --|> Widget
class ButtonWidget{
}
ButtonWidget --|> LabelWidget



class UIWindowHandler{
__Responsibilities__
    managing windows
}

class TablesWindow{
__Responsibilities__
    generating tables window widgets
}
class TableDesignWindow{
__Responsibilities__
    generating table design window widgets
}
class TableRowsWindow{
__Responsibilities__
    generating table rows window widgets
}

UIWindowHandler "1" --> "1" TablesWindow: manages
UIWindowHandler "1" --> "1" TableDesignWindow: manages
UIWindowHandler "1" --> "1" TableRowsWindow: manages

TablesWindow "1" <--> "0...*" Widget: has
TableDesignWindow "1" <--> "0...*" Widget: has
TableRowsWindow "1" <--> "0...*" Widget: has

UIWindowHandler "1" --> "1" TableHandler:  communicates
UIWindowHandler "1" --> "1" TableDesignHandler:  communicates
UIWindowHandler "1" --> "1" TableRowsHandler:  communicates


class TableHandler{
    width : int
    create() : Table
    destroy(Table)
    editTableName(String)
    openTable(Table): Table
    __Responsibilities__
    managing tables
}
TableHandler "1" --> "0..*" Table
TableDesignHandler "1" --> "1" Table
TableRowsHandler "1" --> "1" Table


class TableDesignHandler{
    getColumnTypes():ArrayList(Type,Column)
__Responsibility__
}

class TableRowsHandler{
    Layout
__Responsibility__

}

class Table{
    name : string = "newTable"
    <<constructor>> Table(String) {exception IllegalArgumentException}
    getName(): String
    isValidName(String): boolean {static}
    setName(String) {exception IllegalArgumentException}
    getNbColumns: int
    getColumnAt(int): Column
    canHaveAsColumnAt(int): boolean
    hasProperColumns: boolean
    addColumnAt(int)
    removeColumnAt(int)
    - setNbColumns(int)

    create(): Column
    destroy(Column) : void
    addRow() : void
    deleteRow(Integer) : void
__Responsibility__
manage Column
}



class Cell{
editValue(value): {abstract}
isValid(value): {abstract}
__Responsibility__
Know:
maintain data
}
Cell <|-- BooleanCell
Cell <|-- IntegerCell
Cell <|-- EmailCell
Cell <|-- StringCell

class Column{
name:String
allowsBlanks:Boolean
cells : ArrayList<Cell>

__Responsibility__
Know: column
manage Cells
}

Table "1" *-- "0..*" Column
Column "1" *-- "0..*" Cell: has

class BooleanCell{
value : Boolean
editValue(Boolean)
isValid(Boolean): Boolean
}
class StringCell{
value : String
editValue(String)
isValid(String): Boolean
}
class EmailCell{
value : String
editValue(String)
isValid(String): Boolean
}
class IntegerCell{
value : Integer
editValue(Integer)
isValid(Integer): Boolean
}
@enduml

@startuml

package "tablr" {

    class ColumnConverter{
        ____
        +convertToIntegerColumn(column : Column) {static}
        +canConvertToIntegerColumn(column : Column) {static}
        ...
    }
    ColumnConverter -left...- Table

    UIHandler -> TablesHandler : uses

    class TablesHandler{
        tableManager : TableManager {readOnly}
        terminated : boolean
        __Inspector__

        __Responsibilities__
        providing a controller for tables
    }


    class TableManager{
        tables : List<Table> [*] = new LinkedList<Table>
        currentTable : Table [0...1] = null
        terminated : boolean = false
        __

        __Responsibility__
        manage tables and manage access to tables
    }

    Table "0..*" <-- TableManager
    TablesHandler --> "1" TableManager




    class Table{
        -name
        -columns
        -isTerminated
        __

        __Responsibility__
        manage Column
    }

    package "sql" {
        class SQLParser {

        }

        class SQLManager {
        __Responsibility__
        Handling and
        distributing
        getting and
        setting requests using
        sql (views)
        }
        TablesHandler --> SQLManager
        SQLManager --> TableManager
        SQLManager --> SQLParser

        class SQLInterpreter {
        __Responsibility__
        Retrieving "select"
        query data
        __Pattern__
        Interpreter
        }
        SQLInterpreter <--> SQLManager
        class SQLInverter {
        undoQuery(query)?
        ____
                __Responsibility__
                Setting data
                for views using
                sql by inverting
                the sql
                }
        SQLInverter <--> SQLManager
        SQLInterpreter -- SQLParser : hetzelfde?
    }

    package "column" {

        Column <|-- BooleanColumn
        Column <|-- IntegerColumn
        Column <|-- EmailColumn
        Column <|-- StringColumn

        class Column <<(A, lightgreen)>>{
            -name:String
            -allowsBlanks: boolean
            -defaultValue: String = ""
            -values : List<String>
            __


        __Responsibility__
        Manage list with correct entries
        }

        Table *-- "0..*" Column

        class BooleanColumn{
            -type: String = "Boolean"
            __Inspectors__
            +getType(): String
            +canHaveAsType(type : String) : boolean
            +canHaveAsValue(value : String) : boolean
        }
        class StringColumn{
            -type: String = "String"
            __Inspectors__
            +getType(): String
            +canHaveAsType(type : String) : boolean
            +canHaveAsValue(value : String) : boolean
        }
        class EmailColumn{
            -type: String = "Email"
            __Inspectors__
            +getType(): String
            +canHaveAsType(type : String) : boolean
            +canHaveAsValue(value : String) : boolean
        }
        class IntegerColumn{
            -type: String = "Integer"
            __Inspectors__
            +getType(): String
            +canHaveAsType(type : String) : boolean
            +canHaveAsValue(value : String) : boolean
        }


    }

@enduml